
plugins {
	id 'org.springframework.boot' version '3.1.4'
	id "io.spring.dependency-management" version "1.1.3"
	id 'java'
	id "com.github.node-gradle.node" version "3.1.0"
}

group = 'com.StudyCafe_R'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

configurations {
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'org.projectlombok:lombok:1.18.22'
	implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.14.9'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.3'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.0-rc1'

	implementation platform('org.testcontainers:testcontainers-bom:1.17.3') //import bom
	testImplementation "org.testcontainers:postgresql:1.17.3"

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named("test",Test) {
	useJUnitPlatform()
	providers.systemProperty("jasypt.encryptor.password")
	providers.getProperties().get("jasypt.encryptor.password")
}

node {
	version = '16.14.2'
	download = true
	nodeProjectDir = file("${projectDir}/src/main/resources/static")

}
task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}

tasks.processResources.mustRunAfter(tasks.copyFrontLib)
tasks.processResources.mustRunAfter(tasks.compileJava)

jar {
	manifest {
		attributes(
				'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
				'Main-Class': 'com.StudyCafe_R.StudyCafe_R.App'
		)
	}
}